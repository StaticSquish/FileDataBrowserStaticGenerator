{# @license 3-clause BSD #}


{% extends 'page.html.twig' %}

{% block content %}

	<ol class="breadcrumb">
		<li><a href="{{ '/' | internalLinkToDir }}">Home</a></li>
		<li class="active">Data: {{ rootDataObject.title|slice(0,50) }}</li>
	</ol>

	<h1>{{ rootDataObject.title }}</h1>

	<p>{{ rootDataObject.description | nl2br }}</p>

	{% for key,field in rootDataObject.fields %}
			{% if config.fields[key] and config.fields[key].isList %}
				<p><a href="{{ ('/field/' ~ key ) | internalLinkToDir }}">{{ config.fields[key].label }}</a></p>
				<ul>
					{% for valueScalar in field.values %}
						<li><a href="{{ ('/field/' ~ key ~ '/value/' ~ valueScalar.valueKeyForWeb) | internalLinkToDir }}">{{ valueScalar.valueAsString }}</a></li>
					{% endfor %}
				</ul>
			{% elseif config.fields[key] %}
				<p><a href="{{ ('/field/' ~ key ) | internalLinkToDir }}">{{ config.fields[key].label }}</a></p>
				<p><a href="{{ ('/field/' ~ key ~ '/value/' ~ field.valueKeyForWeb) | internalLinkToDir }}">{{ field.valueAsString }}</a></p>
			{% else %}
				<p>{{ key }}</p>
				<p>{{ field.valueAsString }}</p>
			{% endif %}
	{% endfor %}

	{% for key,field in fieldsWithNoValue %}
		<p><a href="{{ ('/field/' ~ key ) | internalLinkToDir }}">{{ config.fields[key].label }}</a></p>
		<p>No Value Known</p>
	{% endfor %}

	{% if rootDataObject.files %}
		<h2>Files</h2>
		<ul class="list-group">
			{% for file in rootDataObject.files %}
				<li class="list-group-item">
					<a href="files/{{ file.name}}" class="btn btn-default">{{ file.name }}</a>
					{{ file.sizeHumanReadable }}
				</li>
			{% endfor %}
		</ul>
	{% endif %}

    <div id="map" style="display: none;"></div>

{% endblock %}

{% block javascriptFooter %}
    {% set latlngs = [] %}
    {% for key,field in rootDataObject.fields %}
        {% if config.fields[key] and config.fields[key].isLatLng %}
            {% if config.fields[key].isList %}
                {% for valueScalar in field.values %}
                    {% set latlngs = latlngs|merge([valueScalar])  %}
                {% endfor %}
            {% else %}
                {% set latlngs = latlngs|merge([field])  %}
            {% endif %}
        {% endif %}
    {% endfor %}
    {% if latlngs %}
        <script>
            var data = [];
            {% for latlng in latlngs %}
                data.push({'lat':  {{ latlng.lat }}  , 'lng':  {{ latlng.lng}}   });
            {% endfor %}

            $( document ).ready(function() {
                $('#map').show();
                var mapObject = L.map('map');
                var mapquestUrl = 'http://{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png',
			        subDomains = ['otile1','otile2','otile3','otile4'],
			        mapquestAttrib = 'Data, imagery and map information provided by <a href="http://open.mapquest.co.uk" target="_blank">MapQuest</a>, '+
					               '<a href="http://www.openstreetmap.org/" target="_blank">OpenStreetMap</a> and contributors';
	            L.tileLayer(mapquestUrl, {maxZoom: 18, attribution: mapquestAttrib, subdomains: subDomains}).addTo(mapObject);
                var bounds;
                for (index = 0; index < data.length; ++index) {
                    var latlng = L.latLng(data[index].lat, data[index].lng);
                    L.marker(latlng).addTo(mapObject);
                    if (bounds != null) {
                        bounds.extend(latlng);
                    } else {
                        bounds = L.latLngBounds([latlng]);
                    }
                }
                mapObject.fitBounds(bounds);
            });
        </script>
    {% endif %}
{% endblock %}
